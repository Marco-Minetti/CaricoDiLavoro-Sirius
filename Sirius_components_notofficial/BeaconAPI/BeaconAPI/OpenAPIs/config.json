{
    "openapi": "3.0.0",
    "info": {
        "title": "VireoXpower API",
        "version": "",
        "description": "This is sample client UI DOC to try VireoXpower API requests.\n\nExecute <b>/authenticator</b> request to login and get <b>access_token</b> from response and use <b>Authorize</b> button to set access_token to authorize all requests."
    },
    "tags": [
        {
            "name": "authentication",
            "description": "Handle session with bearer token"
        },
        {
            "name": "plant",
            "description": "Access to plants"
        },
        {
            "name": "device",
            "description": "Access to devices by plants"
        },
        {
            "name": "measure",
            "description": "Access to measures, states, commands, alerts, averaged values by device"
        },
        {
            "name": "data",
            "description": "Access to measure data by time interval"
        },
        {
            "name": "limitations",
            "description": "Access to limitations data by time interval"
        },
        {
            "name": "downtimes",
            "description": "Access to downtimes data by time interval"
        }
    ],
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "root"
                }
            },
            "Plant": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "plant": {
                        "type": "string"
                    },
                    "sse": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "up": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "string"
                    },
                    "nominalPower": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "value"
                }
            },
            "Device": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "plant": {
                        "type": "string"
                    },
                    "sse": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string"
                    },
                    "up": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "string"
                    },
                    "nominalPower": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "SSE": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "subsystem": {
                        "type": "string"
                    },
                    "section": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "altitude": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "year": {
                        "type": "string"
                    },
                    "deviceType": {
                        "type": "string"
                    },
                    "ecName": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "downtimeClass": {
                        "type": "string"
                    },
                    "municipality": {
                        "type": "string"
                    },
                    "attr1": {
                        "type": "string"
                    },
                    "attr2": {
                        "type": "string"
                    },
                    "attr3": {
                        "type": "string"
                    },
                    "attr4": {
                        "type": "string"
                    },
                    "attr5": {
                        "type": "string"
                    },
                    "attr6": {
                        "type": "string"
                    },
                    "attr7": {
                        "type": "string"
                    },
                    "attr8": {
                        "type": "string"
                    },
                    "attr9": {
                        "type": "string"
                    },
                    "attr10": {
                        "type": "string"
                    },
                    "attr1Name": {
                        "type": "string"
                    },
                    "attr2Name": {
                        "type": "string"
                    },
                    "attr3Name": {
                        "type": "string"
                    },
                    "attr4Name": {
                        "type": "string"
                    },
                    "attr5Name": {
                        "type": "string"
                    },
                    "attr6Name": {
                        "type": "string"
                    },
                    "attr7Name": {
                        "type": "string"
                    },
                    "attr8Name": {
                        "type": "string"
                    },
                    "attr9Name": {
                        "type": "string"
                    },
                    "attr10Name": {
                        "type": "string"
                    }
                }
            },
            "Measure": {
                "type": "object",
                "properties": {
                    "sse": {
                        "type": "string"
                    },
                    "plant": {
                        "type": "string"
                    },
                    "section": {
                        "type": "string"
                    },
                    "device": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Data": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number"
                            },
                            "valid": {
                                "type": "boolean"
                            },
                            "message": {
                                "type": "string"
                            },
                            "timestamp": {
                                "type": "integer"
                            },
                            "usr": {
                                "type": "string"
                            },
                            "agent": {
                                "type": "string"
                            },
                            "source": {
                                "type": "string"
                            },
                            "stAlarm": {
                                "type": "integer"
                            },
                            "stAck": {
                                "type": "integer"
                            },
                            "labAlarm": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "examples": {
            "AuthenticationJSON": {
                "description": "Authentication token",
                "value": {
                    "status": "success",
                    "message": "login sirius",
                    "data": {
                        "access_token": "fe4ade70bc0248982ebefde9b805ab036f45c0510f722eb33428a20df6ed66c1",
                        "refresh_token": "431a42e9ae99382a4147c4aaf639923f700e1013896607dc863a5fbb5f12e2dcea27a18b885cc19f5963a6a2b735134321562ade99b3ba5624d27a843cb67524",
                        "expires_at": 1634573690
                    }
                }
            },
            "AuthenticationXML": {
                "description": "Authentication token",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <message>login sirius</message>\n    <data>\n        <access_token>921d807c487c1ef365413dd68c630f77b62126567a66a0cc34fbd8b90b6e23cc</access_token>\n        <refresh_token>8d2aff65d1629ab51647c5b05673b3610a8b1682f5f63399712f4ec5c0abbbcb03406439e80e5e0fe4421b1a900e5af370a27cf2d8e8cc2b67a84baa6c5b2dfe</refresh_token>\n        <expires_at>1634583858</expires_at>\n    </data>\n</root>"
            },
            "RefreshTokenJSON": {
                "description": "Authentication token",
                "value": {
                    "status": "success",
                    "data": {
                        "access_token": "fe4ade70bc0248982ebefde9b805ab036f45c0510f722eb33428a20df6ed66c1",
                        "refresh_token": "431a42e9ae99382a4147c4aaf639923f700e1013896607dc863a5fbb5f12e2dcea27a18b885cc19f5963a6a2b735134321562ade99b3ba5624d27a843cb67524",
                        "expires_at": 1634573690
                    }
                }
            },
            "RefreshTokenXML": {
                "description": "Authentication token",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <access_token>1b800cf936c9959fba8ddae4793bff02c7df0764313b8e5a3be6f2cac8cb2740</access_token>\n        <refresh_token>ac4d80ea5360081071d7f4fe616ad1ad339e6a8569d81e8dba2728f34e30df9ed8cf142953374895801f17b3638832af047a6771320c4bacf96ff095f2409f7e</refresh_token>\n        <expires_at>1634584505</expires_at>\n    </data>\n</root>"
            },
            "EndSessionJSON": {
                "description": "Invalidate session token",
                "value": {
                    "status": "success",
                    "message": "logout sirius"
                }
            },
            "EndSessionXML": {
                "description": "Invalidate session token",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <message>logout sirius</message>\n</root>"
            },
            "GetPlantsJSON": {
                "description": "All plants",
                "value": {
                    "status": "success",
                    "data": {
                        "plants": [
                            {
                                "name": "Plant1",
                                "description": "Wind Power Plant of Plant1",
                                "plant": "Plant1",
                                "sse": "SSEPlant1",
                                "state": "GERMANY",
                                "region": "NIEDERSACHSEN",
                                "district": "GER",
                                "up": "UP_Plant_1",
                                "asset": "",
                                "nominalPower": "20.699999999999999",
                                "type": "WPP"
                            },
                            {
                                "name": "Plant2",
                                "description": "PVP di Plant2",
                                "plant": "Plant2",
                                "sse": "SSEPlant2",
                                "state": "ITALY",
                                "region": "PIEMONTE",
                                "district": "AL",
                                "up": "",
                                "asset": "",
                                "nominalPower": "1.74",
                                "type": "PVP"
                            }
                        ]
                    }
                }
            },
            "GetPlantsXML": {
                "description": "All plants",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <plants>\n            <value>\n                <name>Plant1</name>\n                <description>Wind Power Plant of Plant1</description>\n                <plant>Plant1</plant>\n                <sse>SSEPlant1</sse>\n                <state>GERMANY</state>\n                <region>NIEDERSACHSEN</region>\n                <district>GER</district>\n                <up>UP_Plant_1</up>\n                <asset/>\n                <nominalPower>20.699999999999999</nominalPower>\n                <type>WPP</type>\n            </value>\n            <value>\n                <name>Plant2</name>\n                <description>PVP di Plant2</description>\n                <plant>Plant2</plant>\n                <sse>SSEPlant2</sse>\n                <state>ITALY</state>\n                <region>PIEMONTE</region>\n                <district>AL</district>\n                <up/>\n                <asset/>\n                <nominalPower>1.74</nominalPower>\n                <type>PVP</type>\n            </value>\n        </plants>\n    </data>\n</root>"
            },
            "GetBudgetsJSON": {
                "description": "Plants budgets",
                "value": {
                    "status": "success",
                    "data": {
                        "budgets": {
                            "Jan": 4026518,
                            "Feb": 2948542,
                            "Mar": 3368362,
                            "Apr": 2394850,
                            "May": 2236612,
                            "Jun": 1684321,
                            "Jul": 2210566,
                            "Ago": 1947584,
                            "Set": 2473829,
                            "Oct": 3158592,
                            "Nov": 3605298,
                            "Dec": 3552646
                        }
                    }
                }
            },
            "GetBudgetsXML": {
                "description": "Plants budgets",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <budgets>\n            <Jan>4026518</Jan>\n            <Feb>2948542</Feb>\n            <Mar>3368362</Mar>\n            <Apr>2394850</Apr>\n            <May>2236612</May>\n            <Jun>1684321</Jun>\n            <Jul>2210566</Jul>\n            <Ago>1947584</Ago>\n            <Set>2473829</Set>\n            <Oct>3158592</Oct>\n            <Nov>3605298</Nov>\n            <Dec>3552646</Dec>\n        </budgets>\n    </data>\n</root>"
            },
            "GetDevicesJSON": {
                "description": "Devices by plants",
                "value": {
                    "status": "success",
                    "data": {
                        "devices": [
                            {
                                "name": "DeviceName1",
                                "description": "PVP di DeviceName1",
                                "plant": "Plant1",
                                "sse": "SSEPlant1",
                                "state": "ITALY",
                                "region": "PIEMONTE",
                                "district": "AL",
                                "up": "",
                                "asset": "",
                                "nominalPower": "6.1900000000000004",
                                "device": "CONTROL",
                                "subsystem": "PVP",
                                "section": "PLANT",
                                "model": "SMC 11000",
                                "serial": "",
                                "altitude": "",
                                "longitude": "",
                                "year": "-1",
                                "deviceType": "CONTROL",
                                "ecName": "",
                                "notes": "",
                                "vendor": "",
                                "municipality": ""
                            },
                            {
                                "name": "DeviceName2",
                                "description": "PVP di DeviceName2",
                                "plant": "Plant1",
                                "sse": "SSEPlant1",
                                "state": "ITALY",
                                "region": "PIEMONTE",
                                "district": "AL",
                                "up": "",
                                "asset": "",
                                "nominalPower": "6.1900000000000004",
                                "device": "CUM",
                                "subsystem": "PVP",
                                "section": "CABINA 04",
                                "model": "",
                                "serial": "",
                                "altitude": "",
                                "longitude": "",
                                "year": "-1",
                                "deviceType": "CUM",
                                "ecName": "",
                                "notes": "",
                                "vendor": "",
                                "municipality": ""
                            }
                        ]
                    }
                }
            },
            "GetDevicesXML": {
                "description": "Devices by plants",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <devices>\n            <value>\n                <name>DeviceName1</name>\n                <description>PVP di DeviceName1</description>\n                <plant>Plant1</plant>\n                <sse>SSEPlant1</sse>\n                <state>ITALY</state>\n                <region>PIEMONTE</region>\n                <district>AL</district>\n                <up/>\n                <asset/>\n                <nominalPower>6.1900000000000004</nominalPower>\n                <device>CONTROL</device>\n                <subsystem>PVP</subsystem>\n                <section>PLANT</section>\n                <model>SMC 11000</model>\n                <serial/>\n                <altitude/>\n                <longitude/>\n                <year>-1</year>\n                <deviceType>CONTROL</deviceType>\n                <ecName/>\n                <notes/>\n                <vendor/>\n                <municipality/>\n            </value>\n            <value>\n                <name>DeviceName2</name>\n                <description>PVP di DeviceName2</description>\n                <plant>Plant1</plant>\n                <sse>SSEPlant1</sse>\n                <state>ITALY</state>\n                <region>PIEMONTE</region>\n                <district>AL</district>\n                <up/>\n                <asset/>\n                <nominalPower>6.1900000000000004</nominalPower>\n                <device>CUM</device>\n                <subsystem>PVP</subsystem>\n                <section>CABINA 04</section>\n                <model/>\n                <serial/>\n                <altitude/>\n                <longitude/>\n                <year>-1</year>\n                <deviceType>CUM</deviceType>\n                <ecName/>\n                <notes/>\n                <vendor/>\n                <municipality/>\n            </value>\n        </devices>\n    </data>\n</root>"
            },
            "GetMeasuresJSON": {
                "description": "Measures by device",
                "value": {
                    "status": "success",
                    "data": {
                        "measures": [
                            {
                                "sse": "SSEPlants1",
                                "plant": "Plants1",
                                "subsystem": "PVP",
                                "section": "PLANT",
                                "device": "CONTROL",
                                "type": "QAV",
                                "name": "Active Power"
                            },
                            {
                                "sse": "SSEPlants1",
                                "plant": "Plants1",
                                "subsystem": "PVP",
                                "section": "PLANT",
                                "device": "CONTROL",
                                "type": "QAV",
                                "name": "Ambient Temp"
                            }
                        ]
                    }
                }
            },
            "GetMeasuresXML": {
                "description": "Measures by device",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <measures>\n            <value>\n                <sse>SSEPlants1</sse>\n                <plant>Plants1</plant>\n                <subsystem>PVP</subsystem>\n                <section>PLANT</section>\n                <device>CONTROL</device>\n                <type>QAV</type>\n                <name>Active Power</name>\n            </value>\n            <value>\n                <sse>SSEPlants1</sse>\n                <plant>Plants1</plant>\n                <subsystem>PVP</subsystem>\n                <section>PLANT</section>\n                <device>CONTROL</device>\n                <type>QAV</type>\n                <name>Ambient Temp</name>\n            </value>\n        </measures>\n    </data>\n</root>"
            },

            "GetDataByUnixdateJSON": {
                "description": "",
                "value": {
                    "status": "success",
                    "data": {
                        "1571696100000": {
                            "value": 0,
                            "valid": false,
                            "message": "",
                            "timestamp": 1571703300000,
                            "usr": "",
                            "agent": "",
                            "source": "",
                            "stAlarm": 0,
                            "stAck": 0,
                            "labAlarm": ""
                        },
                        "1571697000000": {
                            "value": 0,
                            "valid": false,
                            "message": "",
                            "timestamp": 1571704200000,
                            "usr": "",
                            "agent": "",
                            "source": "",
                            "stAlarm": 0,
                            "stAck": 0,
                            "labAlarm": ""
                        }
                    }
                }
            },
            "GetDataByUnixdateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n    <status>success</status>\n    <data>\n        <_1571696100000>\n            <value>0</value>\n            <valid/>\n            <message/>\n            <timestamp>1571696100000</timestamp>\n            <usr/>\n            <agent/>\n            <source/>\n            <stAlarm>0</stAlarm>\n            <stAck>0</stAck>\n            <labAlarm/>\n        </_1571696100000>\n        <_1571697000000>\n            <value>0</value>\n            <valid/>\n            <message/>\n            <timestamp>1571697000000</timestamp>\n            <usr/>\n            <agent/>\n            <source/>\n            <stAlarm>0</stAlarm>\n            <stAck>0</stAck>\n            <labAlarm/>\n        </_1571697000000>\n    </data>\n</root>"
            },
            "GetDataByDateJSON": {
                "description": "",
                "value": {
                    "status": "success",
                    "data": {
                        "1571696100000": {
                            "value": 0,
                            "valid": false,
                            "message": "",
                            "timestamp": 1571696100000,
                            "usr": "",
                            "agent": "",
                            "source": "",
                            "stAlarm": 0,
                            "stAck": 0,
                            "labAlarm": "",
                            "date": "2019-10-22 02:15:00"
                        },
                        "1571697000000": {
                            "value": 0,
                            "valid": false,
                            "message": "",
                            "timestamp": 1571697000000,
                            "usr": "",
                            "agent": "",
                            "source": "",
                            "stAlarm": 0,
                            "stAck": 0,
                            "labAlarm": "",
                            "date": "2019-10-22 02:30:00"
                        }
                    }
                }
            },
            "GetDataByDateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <root>\n         <status>success</status>\n         <data>\n                 <_1571696100000>\n                         <value>0</value>\n                         <valid/>\n                         <message/>\n                         <timestamp>1571696100000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                     <date>2019-10-22 02:15:00</date>\n                 </_1571696100000>\n                 <_1571697000000>\n                         <value>0</value>\n                         <valid/>\n                         <message/>\n                         <timestamp>1571697000000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                     <date>2019-10-22 02:30:00</date>\n                 </_1571697000000>\n         </data>\n </root>"
            },

            "GetAdvancedDataByUnixdateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n     <status>success</status>\n     <data>\n         <devices>\n             <SSEAL13.AL13.PVP.CABINA_01.CUM>\n                 <QAV.Active_Power>\n                     <_1571703300000>\n                          <value>0.000</value>\n                          <valid/>\n                         <message/>\n                         <timestamp>1571703300000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                         </_1571703300000>\n                    <_1571704200000>\n                         <value>0.000</value>\n                         <valid/>\n                         <message/>\n                         <timestamp>1571704200000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                        </_1571704200000>\n                 </QAV.Active_Power>\n             </SSEAL13.AL13.PVP.CABINA_01.CUM>\n             <SSEAL13.AL13.PVP.CABINA_02.CUM>\n                 <M.Active_Power/>\n             </SSEAL13.AL13.PVP.CABINA_02.CUM>\n         </devices>\n     </data>\n</root>\n"
            },
            "GetAdvancedDataByDateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n     <status>success</status>\n     <data>\n         <devices>\n             <SSEAL13.AL13.PVP.CABINA_01.CUM>\n                 <QAV.Active_Power>\n                     <_1571703300000>\n                          <value>0.000</value>\n                          <valid/>\n                         <message/>\n                         <timestamp>1571703300000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                         <date>2019-10-22 02:15:00</date>\n                     </_1571703300000>\n                     <_1571704200000>\n                         <value>0.000</value>\n                         <valid/>\n                         <message/>\n                         <timestamp>1571704200000</timestamp>\n                         <usr/>\n                         <agent/>\n                         <source/>\n                         <stAlarm>0</stAlarm>\n                         <stAck>0</stAck>\n                         <labAlarm/>\n                         <date>2019-10-22 02:30:00</date>\n                     </_1571704200000>\n                 </QAV.Active_Power>\n             </SSEAL13.AL13.PVP.CABINA_01.CUM>\n             <SSEAL13.AL13.PVP.CABINA_02.CUM>\n                 <M.Active_Power/>\n             </SSEAL13.AL13.PVP.CABINA_02.CUM>\n         </devices>\n     </data>\n</root>\n"
            },
            "GetAdvancedDataByDateJSON": {
                "description": "",
                "value": {
                    "status": "success",
                    "data": {
                        "devices": {
                            "SSEPlant1.Plant1.WPP.A05.CUM": {
                                "QAV.Active Power": {
                                    "1571743800000": {
                                        "value": "0.000",
                                        "valid": false,
                                        "message": "",
                                        "timestamp": 1571743800000,
                                        "usr": "",
                                        "agent": "",
                                        "source": "",
                                        "stAlarm": 0,
                                        "stAck": 0,
                                        "labAlarm": "",
                                        "date": "2019-10-22 02:15:00"
                                    },
                                    "1571744700000": {
                                        "value": "0.000",
                                        "valid": false,
                                        "message": "",
                                        "timestamp": 1571744700000,
                                        "usr": "",
                                        "agent": "",
                                        "source": "",
                                        "stAlarm": 0,
                                        "stAck": 0,
                                        "labAlarm": "",
                                        "date": "2019-10-22 02:30:00"
                                    }
                                },
                                "M.Active Power": []
                            },
                            "SSEPlant1.Plant1.WPP.A06.CUM": {
                                "M.Active Power": []
                            }
                        }
                    }
                }
            },
            "GetAdvancedDataByUnixdateJSON": {
                "value": {
                    "status": "success",
                    "data": {
                        "devices": {
                            "SSEPlant1.Plant1.WPP.A05.CUM": {
                                "QAV.Active Power": {
                                    "1571743800000": {
                                        "value": "0.000",
                                        "valid": false,
                                        "message": "",
                                        "timestamp": 1571743800000,
                                        "usr": "",
                                        "agent": "",
                                        "source": "",
                                        "stAlarm": 0,
                                        "stAck": 0,
                                        "labAlarm": ""
                                    },
                                    "1571744700000": {
                                        "value": "0.000",
                                        "valid": false,
                                        "message": "",
                                        "timestamp": 1571744700000,
                                        "usr": "",
                                        "agent": "",
                                        "source": "",
                                        "stAlarm": 0,
                                        "stAck": 0,
                                        "labAlarm": ""
                                    }
                                },
                                "M.Active Power": []
                            },
                            "SSEPlant1.Plant1.WPP.A06.CUM": {
                                "M.Active Power": []
                            }
                        }
                    }
                }
            },

            "GetLimitationsByDateJSON": {
                "value": {
                    "status": "success",
                    "data": [
                        {
                            "up": "UP_UPNAME_1",
                            "unixStart": "1624370400000",
                            "unixStop": "1624371000000",
                            "setPoint": "20.0",
                            "IdLimitationsStart": "Lim12",
                            "IdLimitationStop": null,
                            "lateNotification": "0",
                            "note": null,
                            "dateStart": "2021-06-22 16:00:00",
                            "dateStop": "2021-06-22 16:10:00",
                            "receivedStart": "1624370400000",
                            "receivedStop": "1624371000000",
                            "dateReceivedStart": "2021-06-22 16:00:00",
                            "dateReceivedStop": "2021-06-22 16:10:00",
                            "isValid": "1"
                        },
                        {
                            "up": "UP_UPNAME_1",
                            "unixStart": "1624370400000",
                            "unixStop": "1624371000000",
                            "setPoint": "20.0",
                            "IdLimitationsStart": "Lim12",
                            "IdLimitationStop": null,
                            "lateNotification": "0",
                            "note": null,
                            "dateStart": "2021-06-22 16:10:00",
                            "dateStop": "2021-06-22 16:15:00",
                            "receivedStart": "1624370400000",
                            "receivedStop": "1624371000000",
                            "dateReceivedStart": "2021-06-22 16:00:00",
                            "dateReceivedStop": "2021-06-22 16:10:00",
                            "isValid": "1"
                        }
                    ]
                }
            },
            "GetLimitationsByDateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <root>\n     <status>success</status>\n     <data>\n         <value>\n             <up>UP_NAME_1</up>\n             <unixStart>1624370400000</unixStart>\n             <unixStop>1624371000000</unixStop>\n             <setPoint>20.0</setPoint>\n             <IdLimitationsStart>Lim12</IdLimitationsStart>\n             <IdLimitationStop/>\n             <lateNotification>0</lateNotification>\n             <note/>\n                         <dateStart>2021-06-22 16:00:00</dateStart>\n             <dateStop>2021-06-22 16:10:00</dateStop>\n         </value>\n         <value>\n             <up>UP_NAME_1</up>\n             <unixStart>1624371000000</unixStart>\n             <unixStop>1624371300000</unixStop>\n             <setPoint>19.0</setPoint>\n             <IdLimitationsStart>Lim13</IdLimitationsStart>\n             <IdLimitationStop/>\n             <lateNotification>0</lateNotification>\n             <note/>\n                         <dateStart>2021-06-22 16:10:00</dateStart>\n             <dateStop>2021-06-22 16:15:00</dateStop>\n         </value>\n     </data>\n </root>\n"
            },
            "GetLimitationsByUnixdateJSON": {
                "value": {
                    "status": "success",
                    "data": [
                        {
                            "up": "UP_UPNAME_1",
                            "unixStart": "1624370400000",
                            "unixStop": "1624371000000",
                            "setPoint": "20.0",
                            "IdLimitationsStart": "Lim12",
                            "IdLimitationStop": null,
                            "lateNotification": "0",
                            "note": null,
                            "receivedStart": "1624370400000",
                            "receivedStop": "1624371000000",
                            "isValid": "1"
                        },
                        {
                            "up": "UP_UPNAME_1",
                            "unixStart": "1624370400000",
                            "unixStop": "1624371000000",
                            "setPoint": "20.0",
                            "IdLimitationsStart": "Lim12",
                            "IdLimitationStop": null,
                            "lateNotification": "0",
                            "note": null,
                            "receivedStart": "1624370400000",
                            "receivedStop": "1624371000000",
                            "isValid": "1"
                        }
                    ]
                }
            },
            "GetLimitationsByUnixdateXML": {
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <root>\n     <status>success</status>\n     <data>\n         <value>\n             <up>UP_NAME_1</up>\n             <unixStart>1624370400000</unixStart>\n             <unixStop>1624371000000</unixStop>\n             <setPoint>20.0</setPoint>\n             <IdLimitationsStart>Lim12</IdLimitationsStart>\n             <IdLimitationStop/>\n             <lateNotification>0</lateNotification>\n             <note/>\n         </value>\n         <value>\n             <up>UP_NAME_1</up>\n             <unixStart>1624371000000</unixStart>\n             <unixStop>1624371300000</unixStop>\n             <setPoint>19.0</setPoint>\n             <IdLimitationsStart>Lim13</IdLimitationsStart>\n             <IdLimitationStop/>\n             <lateNotification>0</lateNotification>\n             <note/>\n         </value>\n     </data>\n </root>\n"
            },

            "GetDowntimesByDateJSON": {
                "value": {
                    "status": "success",
                    "data": [
                        {
                            "sse": "SSEPlant1",
                            "plant": "Plant1",
                            "subsystem": "WPP",
                            "section": "Section 01",
                            "device": "DEV_01",
                            "unixStart": "1643837400000",
                            "unixStop": "1643841600000",
                            "status": "6",
                            "event": "-5",
                            "eventText": "Underperformance (data validator)",
                            "cause": "OTH",
                            "nature": "Other",
                            "validate": "1",
                            "note": "<html>note</html>",
                            "energyLoss": "472.31",
                            "user": null,
                            "dateStart": "2022-02-02 21:30:00",
                            "dateStop": "2022-02-02 22:40:00"
                        },
                        {
                            "sse": "SSEPlant1",
                            "plant": "Plant1",
                            "subsystem": "WPP",
                            "section": "Section 01",
                            "device": "DEV_01",
                            "unixStart": "1644607800000",
                            "unixStop": "1644610200000",
                            "status": "6",
                            "event": "-5",
                            "eventText": "Underperformance (data validator)",
                            "cause": "OTH",
                            "nature": "Other",
                            "validate": "1",
                            "note": null,
                            "energyLoss": "103.01",
                            "user": null,
                            "dateStart": "2022-02-11 19:30:00",
                            "dateStop": "2022-02-11 20:10:00"
                        }
                    ]
                }
            },
            "GetDowntimesByDateXML": {
                "description": "",
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <root>\n     <status>success</status>\n     <data>\n         <value>\n             <sse>SSEPlant1</sse>\n             <plant>Plant1</plant>\n             <subsystem>WPP</subsystem>\n             <section>Section 01</section>\n             <device>DEV_01</device>\n             <unixStart>1643837400000</unixStart>\n             <unixStop>1643841600000</unixStop>\n             <status>6</status>\n             <event>-5</event>\n             <eventText>Underperformance (data validator)</eventText>\n             <cause>OTH</cause>\n             <nature>Other</nature>\n             <validate>1</validate>\n             <note><html>nota</html></note>\n             <energyLoss>472.31</energyLoss>\n             <user/>\n             <dateStart>2022-02-02 21:30:00</dateStart>\n             <dateStop>2022-02-02 22:40:00</dateStop>\n         </value>\n         <value>\n             <sse>SSEPlant1</sse>\n             <plant>Plant1</plant>\n             <subsystem>WPP</subsystem>\n             <section>Section 01</section>\n             <device>DEV_01</device>\n             <unixStart>1644607800000</unixStart>\n             <unixStop>1644610200000</unixStop>\n             <status>6</status>\n             <event>-5</event>\n             <eventText>Underperformance (data validator)</eventText>\n             <cause>OTH</cause>\n             <nature>Other</nature>\n             <validate>1</validate>\n             <note/>\n             <energyLoss>103.01</energyLoss>\n             <user/>\n             <dateStart>2022-02-11 19:30:00</dateStart>\n             <dateStop>2022-02-11 20:10:00</dateStop>\n         </value>\n     </data>\n </root>\n"
            },
            "GetDowntimesByUnixdateJSON": {
                "value": {
                    "status": "success",
                    "data": [
                        {
                            "sse": "SSEPlant1",
                            "plant": "Plant1",
                            "subsystem": "WPP",
                            "section": "Section 01",
                            "device": "DEV_01",
                            "unixStart": "1643837400000",
                            "unixStop": "1643841600000",
                            "status": "6",
                            "event": "-5",
                            "eventText": "Underperformance (data validator)",
                            "cause": "OTH",
                            "nature": "Other",
                            "validate": "1",
                            "note": "<html>note</html>",
                            "energyLoss": "472.31",
                            "user": null
                        },
                        {
                            "sse": "SSEPlant1",
                            "plant": "Plant1",
                            "subsystem": "WPP",
                            "section": "Section 01",
                            "device": "DEV_01",
                            "unixStart": "1644607800000",
                            "unixStop": "1644610200000",
                            "status": "6",
                            "event": "-5",
                            "eventText": "Underperformance (data validator)",
                            "cause": "OTH",
                            "nature": "Other",
                            "validate": "1",
                            "note": null,
                            "energyLoss": "103.01",
                            "user": null
                        }
                    ]
                }
            },
            "GetDowntimesByUnixdateXML": {
                "value": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <root>\n     <status>success</status>\n     <data>\n         <value>\n             <sse>SSEPlant1</sse>\n             <plant>Plant1</plant>\n             <subsystem>WPP</subsystem>\n             <section>Section 01</section>\n             <device>DEV_01</device>\n             <unixStart>1643837400000</unixStart>\n             <unixStop>1643841600000</unixStop>\n             <status>6</status>\n             <event>-5</event>\n             <eventText>Underperformance (data validator)</eventText>\n             <cause>OTH</cause>\n             <nature>Other</nature>\n             <validate>1</validate>\n             <note><html>nota</html></note>\n             <energyLoss>472.31</energyLoss>\n             <user/>\n         </value>\n         <value>\n             <sse>SSEPlant1</sse>\n             <plant>Plant1</plant>\n             <subsystem>WPP</subsystem>\n             <section>Section 01</section>\n             <device>DEV_01</device>\n             <unixStart>1644607800000</unixStart>\n             <unixStop>1644610200000</unixStop>\n             <status>6</status>\n             <event>-5</event>\n             <eventText>Underperformance (data validator)</eventText>\n             <cause>OTH</cause>\n             <nature>Other</nature>\n             <validate>1</validate>\n             <note/>\n             <energyLoss>103.01</energyLoss>\n             <user/>\n         </value>\n     </data>\n </root>\n"
            },

            "GetCurtailmentSetpointByUnixdateXML": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n   <data>\n      <limitations>\n         <element>\n            <cause>Communication error</cause>\n            <causeShort>ERR</causeShort>\n            <component>Acoustic</component>\n            <componentShort>Acoustic</componentShort>\n            <curtailmentId>-</curtailmentId>\n            <curtailmentIssuer>-</curtailmentIssuer>\n            <devices>LINE 01~DEV01, LINE 01~DEV02</devices>\n            <devicesArray>\n               <element>\n                  <device>DEVB01</device>\n                  <plant>Plant1</plant>\n                  <plantTranslate>Plant 1</plantTranslate>\n                  <section>Line 01</section>\n                  <sse>SSEPlant1</sse>\n                  <subsystem>WPP</subsystem>\n               </element>\n            </devicesArray>\n            <enabled>true</enabled>\n            <formattedNotes>\n               <ops>\n                  <element>\n                     <insert />\n                  </element>\n               </ops>\n            </formattedNotes>\n            <limitationIdentity>1630449240000~1630535640000~~10.00~ERR~Acoustic</limitationIdentity>\n            <notes>-</notes>\n            <plants>Plant 1</plants>\n            <powerMW>10.00</powerMW>\n            <powerPercent>-</powerPercent>\n            <preserveExistingDts>true</preserveExistingDts>\n            <start>2021-09-01 00:34:00</start>\n            <stop>2021-09-02 00:34:00</stop>\n            <user>user</user>\n         </element>\n      </limitations>\n   </data>\n   <status>success</status>\n</root>"
            },
            "GetCurtailmentSetpointByUnixdateJSON": {
                "value": {
                    "status": "success",
                    "data": {
                        "limitations": [
                            {
                                "limitationIdentity": "1630449240000~1630535640000~~10.00~ERR~Acoustic",
                                "enabled": true,
                                "preserveExistingDts": true,
                                "start": "2021-09-01 00:34:00",
                                "stop": "2021-09-02 00:34:00",
                                "powerPercent": "-",
                                "powerMW": "10.00",
                                "devices": "LINE 01~DEV01, LINE 01~DEV02",
                                "devicesArray": [
                                    {
                                        "sse": "SSEPlant1",
                                        "plant": "Plant1",
                                        "plantTranslate": "Plant 1",
                                        "subsystem": "WPP",
                                        "section": "Line 01",
                                        "device": "DEVB01"
                                    }
                                ],
                                "plants": "Plant 1",
                                "cause": "Communication error",
                                "causeShort": "ERR",
                                "component": "Acoustic",
                                "componentShort": "Acoustic",
                                "curtailmentId": "-",
                                "curtailmentIssuer": "-",
                                "notes": "-",
                                "formattedNotes": {
                                    "ops": [
                                        {
                                            "insert": "\n"
                                        }
                                    ]
                                },
                                "user": "user"
                            }
                        ]
                    }
                }
            },

            "GetCurtailmentSetpointByDateXML": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n   <data>\n      <limitations>\n         <element>\n            <cause>Communication error</cause>\n            <causeShort>ERR</causeShort>\n            <component>Acoustic</component>\n            <componentShort>Acoustic</componentShort>\n            <curtailmentId>-</curtailmentId>\n            <curtailmentIssuer>-</curtailmentIssuer>\n            <devices>LINE 01~DEV01, LINE 01~DEV02</devices>\n            <devicesArray>\n               <element>\n                  <device>DEVB01</device>\n                  <plant>Plant1</plant>\n                  <plantTranslate>Plant 1</plantTranslate>\n                  <section>Line 01</section>\n                  <sse>SSEPlant1</sse>\n                  <subsystem>WPP</subsystem>\n               </element>\n            </devicesArray>\n            <enabled>true</enabled>\n            <formattedNotes>\n               <ops>\n                  <element>\n                     <insert />\n                  </element>\n               </ops>\n            </formattedNotes>\n            <limitationIdentity>1630449240000~1630535640000~~10.00~ERR~Acoustic</limitationIdentity>\n            <notes>-</notes>\n            <plants>Plant 1</plants>\n            <powerMW>10.00</powerMW>\n            <powerPercent>-</powerPercent>\n            <preserveExistingDts>true</preserveExistingDts>\n            <start>2021-09-01 00:34:00</start>\n            <stop>2021-09-02 00:34:00</stop>\n            <user>user</user>\n         </element>\n      </limitations>\n   </data>\n   <status>success</status>\n</root>"
            },
            "GetCurtailmentSetpointByDateJSON": {
                "value": {
                    "status": "success",
                    "data": {
                        "limitations": [
                            {
                                "limitationIdentity": "1630449240000~1630535640000~~10.00~ERR~Acoustic",
                                "enabled": true,
                                "preserveExistingDts": true,
                                "start": "2021-09-01 00:34:00",
                                "stop": "2021-09-02 00:34:00",
                                "powerPercent": "-",
                                "powerMW": "10.00",
                                "devices": "LINE 01~DEV01, LINE 01~DEV02",
                                "devicesArray": [
                                    {
                                        "sse": "SSEPlant1",
                                        "plant": "Plant1",
                                        "plantTranslate": "Plant 1",
                                        "subsystem": "WPP",
                                        "section": "Line 01",
                                        "device": "DEVB01"
                                    }
                                ],
                                "plants": "Plant 1",
                                "cause": "Communication error",
                                "causeShort": "ERR",
                                "component": "Acoustic",
                                "componentShort": "Acoustic",
                                "curtailmentId": "-",
                                "curtailmentIssuer": "-",
                                "notes": "-",
                                "formattedNotes": {
                                    "ops": [
                                        {
                                            "insert": "\n"
                                        }
                                    ]
                                },
                                "user": "user"
                            }
                        ]
                    }
                }
            },

            "UsernameNotValid": {
                "description": "Username is not valid, probably null",
                "value": {
                    "status": "error",
                    "message": "username not valid"
                }
            },
            "PasswordNotValid": {
                "description": "Password is not valid, probably null",
                "value": {
                    "status": "error",
                    "message": "password not valid"
                }
            },
            "WrongUsernameAndPassword": {
                "description": "The account username or password is wrong.",
                "value": {
                    "status": "error",
                    "message": "Wrong username or password"
                }
            },
            "TokenNotValid": {
                "description": "Authorization token is not valid.",
                "value": {
                    "status": "error",
                    "message": "token not valid"
                }
            },

            "MissingToken": {
                "description": "Missing authentication bearer token in header.",
                "value": {
                    "status": "error",
                    "message": "missing token"
                }
            },
            "InvalidJSONBody": {
                "description": "JSON body format is invalid.",
                "value": {
                    "status": "error",
                    "message": "invalid JSON format"
                }
            },
            "ParameterNotFound": {
                "description": "Required parameter not found in JSON body.",
                "value": {
                    "status": "error",
                    "message": "parameter \"device\" not found in JSON body"
                }
            },
            "ParameterNotFoundArray": {
                "description": "Required parameter not found in array of JSON body",
                "value": {
                    "status": "error",
                    "message": "parameter \"plant\" not found in 2° element of array in JSON body"
                }
            },
            "ParameterNotValid": {
                "description": "Required parameter are not valid.",
                "value": {
                    "status": "error",
                    "message": "parameter \"plant\" cannot be null or empty string"
                }
            },
            "ParameterNotValidArray": {
                "description": "Required parameter are not valid.",
                "value": {
                    "status": "error",
                    "message": "parameter \"plant\" in 1° cannot be null or empty string"
                }
            },
            "VariableNotValid": {
                "description": "Parameters variable are not valid",
                "value": {
                    "status": "error",
                    "message": "Variable not valid"
                }
            }
        },
        "responses": {
            "Authorization": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "Authentication": {
                                "$ref": "#/components/examples/AuthenticationJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "Authentication": {
                                "$ref": "#/components/examples/AuthenticationXML"
                            }
                        }
                    }
                }
            },
            "RefreshToken": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "Authentication": {
                                "$ref": "#/components/examples/RefreshTokenJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "Authentication": {
                                "$ref": "#/components/examples/RefreshTokenXML"
                            }
                        }
                    }
                }
            },
            "EndSession": {
                "description": "The request has succeeded",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "EndSession": {
                                "$ref": "#/components/examples/EndSessionJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "EndSession": {
                                "$ref": "#/components/examples/EndSessionXML"
                            }
                        }
                    }
                }
            },
            "GetPlants": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetPlants": {
                                "$ref": "#/components/examples/GetPlantsJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetPlants": {
                                "$ref": "#/components/examples/GetPlantsXML"
                            }
                        }
                    }
                }
            },
            "GetBudgets": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetBudgets": {
                                "$ref": "#/components/examples/GetBudgetsJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetBudgets": {
                                "$ref": "#/components/examples/GetBudgetsXML"
                            }
                        }
                    }
                }
            },
            "GetDevices": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetDevices": {
                                "$ref": "#/components/examples/GetDevicesJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetDevices": {
                                "$ref": "#/components/examples/GetDevicesXML"
                            }
                        }
                    }
                }
            },
            "GetMeasures": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetMeasures": {
                                "$ref": "#/components/examples/GetMeasuresJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetMeasures": {
                                "$ref": "#/components/examples/GetMeasuresXML"
                            }
                        }
                    }
                }
            },

            "GetDataByUnixdate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDataByUnixdateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDataByUnixdateXML"
                            }
                        }
                    }
                }
            },
            "GetDataByDate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDataByDateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDataByDateXML"
                            }
                        }
                    }
                }
            },

            "GetAdvancedDataByUnixdate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetAdvancedDataByUnixdateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetAdvancedDataByUnixdateXML"
                            }
                        }
                    }
                }
            },
            "GetAdvancedDataByDate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetAdvancedDataByDateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetAdvancedDataByDateXML"
                            }
                        }
                    }
                }
            },

            "GetLimitationsByDate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetLimitationsByDateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetLimitationsByDateXML"
                            }
                        }
                    }
                }
            },
            "GetLimitationsByUnixdate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetLimitationsByUnixdateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetLimitationsByUnixdateXML"
                            }
                        }
                    }
                }
            },

            "GetDowntimesByDate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDowntimesByDateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDowntimesByDateXML"
                            }
                        }
                    }
                }
            },
            "GetDowntimesByUnixdate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDowntimesByUnixdateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetDowntimesByUnixdateXML"
                            }
                        }
                    }
                }
            },

            "GetCurtailmentSetpointByUnixdate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetCurtailmentSetpointByUnixdateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetCurtailmentSetpointByUnixdateXML"
                            }
                        }
                    }
                }
            },
            "GetCurtailmentSetpointByDate": {
                "description": "The request has succeeded.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetCurtailmentSetpointByDateJSON"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        },
                        "examples": {
                            "GetData": {
                                "$ref": "#/components/examples/GetCurtailmentSetpointByDateXML"
                            }
                        }
                    }
                }
            }
        },
        "requestBodies": {

            "GetBudgets": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "year": {
                                    "type": "integer",
                                    "example": 2022
                                }
                            }
                        }
                    }
                }
            },
            "GetDevices": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "addictionalInfo": {
                                    "type": "boolean",
                                    "example": false
                                }
                            }
                        }
                    }
                }
            },
            "GetMeasures": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "device": {
                                    "type": "string",
                                    "example": "A05"
                                },
                                "subsystem": {
                                    "type": "string",
                                    "example": "WPP"
                                },
                                "section": {
                                    "type": "string",
                                    "example": "ARANCIO"
                                }
                            }
                        }
                    }
                }
            },
            "GetDataByUnixdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "subsystem": {
                                    "type": "string",
                                    "example": "WPP"
                                },
                                "section": {
                                    "type": "string",
                                    "example": "CABINA 03"
                                },
                                "device": {
                                    "type": "string",
                                    "example": "GRPD-INV01"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "ALA"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "High Producibility - No Production"
                                },
                                "date_start": {
                                    "type": "integer",
                                    "example": 1571695200000,
                                    "description": "Unix date timestamp start."
                                },
                                "date_stop": {
                                    "type": "integer",
                                    "example": 1571781600000,
                                    "description": "Unix date timestamp stop."
                                }
                            }
                        }
                    }
                }
            },
            "GetDataByDate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "subsystem": {
                                    "type": "string",
                                    "example": "WPP"
                                },
                                "section": {
                                    "type": "string",
                                    "example": "CABINA 03"
                                },
                                "device": {
                                    "type": "string",
                                    "example": "GRPD-INV01"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "ALA"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "High Producibility - No Production"
                                },
                                "date_start": {
                                    "type": "string",
                                    "example": "2019-10-22",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "date_stop": {
                                    "type": "string",
                                    "example": "2019-10-23",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "time_zone": {
                                    "type": "string",
                                    "example": "Europe/Rome",
                                    "description": "Date time zone"
                                }
                            }
                        }
                    }
                }
            },

            "GetAdvancedDataByUnixdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "plant": {
                                                "type": "string"
                                            },
                                            "sse": {
                                                "type": "string"
                                            },
                                            "device": {
                                                "type": "string"
                                            },
                                            "subsystem": {
                                                "type": "string"
                                            },
                                            "section": {
                                                "type": "string"
                                            },
                                            "measures": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "example": [
                                        {
                                            "sse":"SSEPlant1",
                                            "plant":"Plant1",
                                            "subsystem":"PVP",
                                            "section":"CABINA 01",
                                            "device":"CUM",
                                            "measures": [
                                                {
                                                    "type":"QAV",
                                                    "name":"Active Power"
                                                },
                                                {
                                                    "type":"M",
                                                    "name":"Active Power"
                                                }
                                            ]
                                        },
                                        {
                                            "sse":"SSEPla",
                                            "plant":"Plant1",
                                            "subsystem":"PVP",
                                            "section":"CABINA 02",
                                            "device":"CUM",
                                            "measures": [
                                                {
                                                    "type":"M",
                                                    "name":"Active Power"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "date_start": {
                                    "type": "integer",
                                    "example": 1571695200000,
                                    "description": "Unix date timestamp start."
                                },
                                "date_stop": {
                                    "type": "integer",
                                    "example": 1571781600000,
                                    "description": "Unix date timestamp stop."
                                }
                            }
                        }
                    }
                }
            },
            "GetAdvancedDataByDate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "plant": {
                                                "type": "string"
                                            },
                                            "sse": {
                                                "type": "string"
                                            },
                                            "device": {
                                                "type": "string"
                                            },
                                            "subsystem": {
                                                "type": "string"
                                            },
                                            "section": {
                                                "type": "string"
                                            },
                                            "measures": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "example": [
                                            {
                                                "sse":"SSEPlant1",
                                                "plant":"Plant1",
                                                "subsystem":"PVP",
                                                "section":"CABINA 01",
                                                "device":"CUM",
                                                "measures": [
                                                    {
                                                        "type":"QAV",
                                                        "name":"Active Power"
                                                    },
                                                    {
                                                        "type":"M",
                                                        "name":"Active Power"
                                                    }
                                                ]
                                            },
                                            {
                                                "sse":"SSEPla",
                                                "plant":"Plant1",
                                                "subsystem":"PVP",
                                                "section":"CABINA 02",
                                                "device":"CUM",
                                                "measures": [
                                                    {
                                                        "type":"M",
                                                        "name":"Active Power"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "date_start": {
                                    "type": "string",
                                    "example": "2019-10-22",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "date_stop": {
                                    "type": "string",
                                    "example": "2019-10-23",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "time_zone": {
                                    "type": "string",
                                    "example": "Europe/Rome",
                                    "description": "Date time zone"
                                }
                            }
                        }
                    }
                }
            },

            "GetLimitationsByDate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "up": {
                                    "type": "string",
                                    "example": "UP_UPNAME_1"
                                },
                                "date_start": {
                                    "type": "string",
                                    "example": "2019-10-22",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "date_stop": {
                                    "type": "string",
                                    "example": "2019-10-23",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "received_start": {
                                    "type": "string",
                                    "example": "2019-10-22",
                                    "description": "YYYY-MM-DD date received start."
                                },
                                "received_stop": {
                                    "type": "string",
                                    "example": "2019-10-23",
                                    "description": "YYYY-MM-DD date received start."
                                },
                                "time_zone": {
                                    "type": "string",
                                    "example": "Europe/Rome",
                                    "description": "Date time zone"
                                }
                            }
                        }
                    }
                }
            },
            "GetLimitationsByUnixdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "up": {
                                    "type": "string",
                                    "example": "UP_UPNAME_1"
                                },
                                "date_start": {
                                    "type": "integer",
                                    "example": 1571695200000,
                                    "description": "Unix date timestamp start."
                                },
                                "date_stop": {
                                    "type": "integer",
                                    "example": 1571781600000,
                                    "description": "Unix date timestamp stop."
                                },
                                "received_start": {
                                    "type": "integer",
                                    "example": 1571695200000,
                                    "description": "Unix date timestamp start."
                                },
                                "received_stop": {
                                    "type": "integer",
                                    "example": 1571781600000,
                                    "description": "Unix date timestamp stop."
                                }
                            }
                        }
                    }
                }
            },

            "GetDowntimesByUnixdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subsystem": {
                                                "type": "string"
                                            },
                                            "section": {
                                                "type": "string"
                                            },
                                            "device": {
                                                "type": "string"
                                            }
                                        },
                                        "example": {
                                            "subsystem": "WPP",
                                            "section": "Section 01",
                                            "device": "Device_01"
                                        }
                                    }
                                },
                                "date_start": {
                                    "type": "integer",
                                    "example": 1571695200000,
                                    "description": "Unix date timestamp start."
                                },
                                "date_stop": {
                                    "type": "integer",
                                    "example": 1571781600000,
                                    "description": "Unix date timestamp stop."
                                }
                            }
                        }
                    }
                }
            },
            "GetDowntimesByDate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": {
                                    "type": "string",
                                    "example": "SSEPlant1"
                                },
                                "plant": {
                                    "type": "string",
                                    "example": "Plant1"
                                },
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subsystem": {
                                                "type": "string"
                                            },
                                            "section": {
                                                "type": "string"
                                            },
                                            "device": {
                                                "type": "string"
                                            }
                                        },
                                        "example": {
                                            "subsystem": "WPP",
                                            "section": "Section 01",
                                            "device": "Device_01"
                                        }
                                    }
                                },
                                "date_start": {
                                    "type": "string",
                                    "example": "2019-10-22",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "date_stop": {
                                    "type": "string",
                                    "example": "2019-10-23",
                                    "description": "YYYY-MM-DD date timestamp start."
                                },
                                "time_zone": {
                                    "type": "string",
                                    "example": "Europe/Rome",
                                    "description": "Date time zone"
                                }
                            }
                        }
                    }
                }
            },

            "GetCurtailmentSetpointByUnixdate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": { "type": "string" },
                                "plant": { "type": "string" },
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subsystem": { "type": "string" },
                                            "section": { "type": "string"
                                            },
                                            "device": { "type": "string" }
                                        }
                                    }
                                },
                                "date_start": {
                                    "type": "integer",
                                    "description": "timestamp start."
                                },
                                "date_stop": {
                                    "type": "integer",
                                    "description": "timestamp stop."
                                }
                            }
                        },
                        "examples": {
                            "sse and plant": {
                                "description": "Get curtailment setpoint for all devices of a plant",
                                "value": {
                                    "sse": "SSEPlant1",
                                    "plant": "Plant1",
                                    "date_start": 1625932800000,
                                    "date_stop": 1631655000000
                                }
                            },
                            "sse and devices": {
                                "description": "Get curtailment setpoint for devices",
                                "value": {
                                    "devices": [
                                        {
                                            "sse": "SSEPlant1",
                                            "plant": "Plant1",
                                            "subsystem": "WPP",
                                            "section": "Section 01",
                                            "device": "Device_01"
                                        },
                                        {
                                            "sse": "SSEPlant2",
                                            "plant": "Plant2",
                                            "subsystem": "WPP",
                                            "section": "Section 02",
                                            "device": "Device_02"
                                        }
                                    ],
                                    "date_start": 1625932800000,
                                    "date_stop": 1631655000000
                                }
                            }
                        }
                    }
                }
            },
            "GetCurtailmentSetpointByDate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sse": { "type": "string" },
                                "plant": { "type": "string" },
                                "devices": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "subsystem": { "type": "string" },
                                            "section": { "type": "string"
                                            },
                                            "device": { "type": "string" }
                                        }
                                    }
                                },
                                "date_start": {
                                    "type": "string",
                                    "description": "date start."
                                },
                                "date_stop": {
                                    "type": "string",
                                    "description": "date stop."
                                },
                                "time_zone": {
                                    "type": "string",
                                    "description": "time zone."
                                }
                            }
                        },
                        "examples": {
                            "sse and plant": {
                                "description": "Get curtailment setpoint for all devices of a plant",
                                "value": {
                                    "sse": "SSEPlant1",
                                    "plant": "Plant1",
                                    "date_start": "2021-07-10",
	                                "date_stop": "2021-09-14"
                                }
                            },
                            "sse and devices": {
                                "description": "Get curtailment setpoint for devices",
                                "value": {
                                    "devices": [
                                        {
                                            "sse": "SSEPlant1",
                                            "plant": "Plant1",
                                            "subsystem": "WPP",
                                            "section": "Section 01",
                                            "device": "Device_01"
                                        },
                                        {
                                            "sse": "SSEPlant2",
                                            "plant": "Plant2",
                                            "subsystem": "WPP",
                                            "section": "Section 02",
                                            "device": "Device_02"
                                        }
                                    ],
                                    "date_start": "2021-07-10",
                                    "date_stop": "2021-09-14"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/authenticator": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "User Authentication",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "username account",
                                        "required": ["true"]
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "description": "password account",
                                        "required": ["true"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Authorization"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    },
                                    "Username not valid": {
                                        "$ref": "#/components/examples/UsernameNotValid"
                                    },
                                    "Password not valid": {
                                        "$ref": "#/components/examples/PasswordNotValid"
                                    },
                                    "Wrong username and password": {
                                        "$ref": "#/components/examples/WrongUsernameAndPassword"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    },
                                    "Username not valid": {
                                        "$ref": "#/components/examples/UsernameNotValid"
                                    },
                                    "Password not valid": {
                                        "$ref": "#/components/examples/PasswordNotValid"
                                    },
                                    "Wrong username and password": {
                                        "$ref": "#/components/examples/WrongUsernameAndPassword"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refreshToken": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh access token",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "refresh_token": {
                                        "type": "string",
                                        "description": "refresh token",
                                        "required": ["true"]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/RefreshToken"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    },
                                    "Missing refresh token": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    },
                                    "Missing refresh token": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/endSession": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout token",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EndSession"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getPlants": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "plant"
                ],
                "summary": "Get all sse, plants, ups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetPlants"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getBudgets": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "plant"
                ],
                "summary": "Get plant budgets",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetBudgets"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetBudgets"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getDevices": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "device"
                ],
                "summary": "Get plants devices",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetDevices"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetDevices"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not found (array JSON body)": {
                                        "$ref": "#/components/examples/ParameterNotFoundArray"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Parameter not valid (array JSON body)": {
                                        "$ref": "#/components/examples/ParameterNotValidArray"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not found (array JSON body)": {
                                        "$ref": "#/components/examples/ParameterNotFoundArray"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Parameter not valid (array JSON body)": {
                                        "$ref": "#/components/examples/ParameterNotValidArray"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getMeasures": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "measure"
                ],
                "summary": "Get device measures",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetMeasures"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetMeasures"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/getDataByUnixdate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get measure by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetDataByUnixdate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetDataByUnixdate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getDataByDate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get measure by date interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetDataByDate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetDataByDate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/getAdvancedDataByUnixdate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get devices measure by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetAdvancedDataByUnixdate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetAdvancedDataByUnixdate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getAdvancedDataByDate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get devices measure by date interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetAdvancedDataByDate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetAdvancedDataByDate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    },
                                    "Variable not valid": {
                                        "$ref": "#/components/examples/VariableNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/getLimitationsByUnixdate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "limitations"
                ],
                "summary": "Get measure by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetLimitationsByUnixdate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetLimitationsByUnixdate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getLimitationsByDate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "limitations"
                ],
                "summary": "Get measure by date interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetLimitationsByDate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetLimitationsByDate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/getDowntimesByUnixdate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "downtimes"
                ],
                "summary": "Get downtimes by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetDowntimesByUnixdate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetDowntimesByUnixdate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getDowntimesByDate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "downtimes"
                ],
                "summary": "Get downtimes by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetDowntimesByDate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetDowntimesByDate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/getCurtailmentSetpointByUnixdate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "limitations"
                ],
                "summary": "Get curtailment setpoints by unixdate interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetCurtailmentSetpointByUnixdate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetCurtailmentSetpointByUnixdate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getCurtailmentSetpointByDate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "limitations"
                ],
                "summary": "Get curtailment setpoints by date interval",
                "requestBody": {
                    "$ref": "#/components/requestBodies/GetCurtailmentSetpointByDate"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/GetCurtailmentSetpointByDate"
                    },
                    "401": {
                        "description": "The request has not been applied because it lacks valid authentication credentials for the target resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Token not valid": {
                                        "$ref": "#/components/examples/TokenNotValid"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                },
                                "examples": {
                                    "Missing token": {
                                        "$ref": "#/components/examples/MissingToken"
                                    },
                                    "Invalid JSON body": {
                                        "$ref": "#/components/examples/InvalidJSONBody"
                                    },
                                    "Parameter not found": {
                                        "$ref": "#/components/examples/ParameterNotFound"
                                    },
                                    "Parameter not valid": {
                                        "$ref": "#/components/examples/ParameterNotValid"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
